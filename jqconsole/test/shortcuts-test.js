// Generated by CoffeeScript 1.3.3
(function() {
  var jqconsole, keyDown, _ref, _ref1;

  _ref = jqconsoleSetup(), jqconsole = _ref.jqconsole, (_ref1 = _ref.typer, keyDown = _ref1.keyDown);

  describe('Shortcuts', function() {
    describe('#RegisterShortcut', function() {
      it('throws if callback not function', function() {
        return assert.throws(function() {
          return jqconsole.RegisterShortcut('b', 'c');
        });
      });
      it('registers shortcut by string', function() {
        var cb;
        cb = function() {};
        jqconsole.RegisterShortcut('a', cb);
        deepEqual(jqconsole.shortcuts['a'.charCodeAt(0)], [cb]);
        return deepEqual(jqconsole.shortcuts['A'.charCodeAt(0)], [cb]);
      });
      it('registers shortcut by charcode', function() {
        var cb;
        cb = function() {};
        jqconsole.RegisterShortcut('c'.charCodeAt(0), cb);
        deepEqual(jqconsole.shortcuts['c'.charCodeAt(0)], [cb]);
        return deepEqual(jqconsole.shortcuts['C'.charCodeAt(0)], [cb]);
      });
      return it('shortcuts must be ascii', function() {
        return assert.throws(function() {
          return jqconsole.RegisterShortcut('Æ’', function() {});
        });
      });
    });
    describe('#UnRegisterShortcut', function() {
      it('removes all callback for a shortcut', function() {
        var cb;
        cb = function() {};
        jqconsole.RegisterShortcut('a', cb);
        jqconsole.UnRegisterShortcut('a');
        return deepEqual(jqconsole.shortcuts['a'.charCodeAt(0)], void 0);
      });
      return it('removes specific callback', function() {
        var aCb, bCb;
        aCb = function() {};
        bCb = function() {};
        jqconsole.RegisterShortcut('a', aCb);
        jqconsole.RegisterShortcut('a', bCb);
        jqconsole.UnRegisterShortcut('a', aCb);
        return deepEqual(jqconsole.shortcuts['a'.charCodeAt(0)], [bCb]);
      });
    });
    describe('#ResetShortcuts', function() {
      return it('resets all shortcuts', function() {
        var cb1, cb2;
        cb1 = function() {};
        cb2 = function() {};
        jqconsole.RegisterShortcut('a', cb1);
        jqconsole.RegisterShortcut('b', cb2);
        jqconsole.ResetShortcuts();
        return deepEqual(jqconsole.shortcuts, {});
      });
    });
    return describe('Invoking Shortcuts', function() {
      return it('invokes shortcuts', function() {
        var counter;
        jqconsole.Prompt(true, function() {});
        counter = 0;
        jqconsole.RegisterShortcut('a', function() {
          strictEqual(this, jqconsole);
          return counter++;
        });
        keyDown('a'.charCodeAt(0), {
          metaKey: true
        });
        return ok(counter);
      });
    });
  });

}).call(this);
